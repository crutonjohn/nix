receivers:
  prometheus:
    config:
      global:
        scrape_interval: 60s
      scrape_configs:
        - job_name: otel-collector
          static_configs:
            - targets:
                - 127.0.0.1:8888
              labels:
                job_name: otel-collector
                instance: nixos-us-ord
        - job_name: headscale
          static_configs:
            - targets:
                - 127.0.0.1:9090
              labels:
                job_name: headscale
                instance: nixos-us-ord
        - job_name: omada-exporter
          static_configs:
            - targets:
                - 127.0.0.1:9202
              labels:
                job_name: omada-exporter
                instance: nixos-us-ord
        - job_name: node-exporter
          static_configs:
            - targets:
                - 100.64.0.9:9100
              labels:
                job_name: node-exporter
                instance: nixos-us-ord
            - targets:
                - 100.64.0.10:9100
              labels:
                job_name: node-exporter
                instance: cs2-us-ord
processors:
  batch:
    send_batch_size: 10000
    send_batch_max_size: 11000
    timeout: 10s
  resourcedetection:
    # Using OTEL_RESOURCE_ATTRIBUTES envvar, env detector adds custom labels.
    detectors: [env, system]
    timeout: 2s
extensions:
  health_check:
    endpoint: 127.0.0.1:13133
  pprof:
    endpoint: 127.0.0.1:1777
exporters:
  otlp:
    endpoint: "otelgw.internal.heyjohn.family:4317"
    tls:
      insecure: false
      cert_file: /var/lib/step/tls.crt
      key_file: /var/lib/step/tls.key
      ca_file: /var/lib/step/ca.crt

service:
  telemetry:
    logs:
      encoding: json
      level: debug
    metrics:
      address: 127.0.0.1:8888
  extensions:
    - health_check
    - pprof
  pipelines:
    metrics/prometheus:
      receivers: [prometheus]
      processors: [batch]
      exporters: [otlp, debug]
